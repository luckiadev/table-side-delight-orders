// This file is automatically generated. Do not edit it directly.
import { createClient, type SupabaseClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Get Supabase configuration from environment variables
const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY;

const hasSupabaseConfiguration = Boolean(SUPABASE_URL && SUPABASE_PUBLISHABLE_KEY);

// Keep the client and a possible configuration error cached at module level
const supabaseClient = hasSupabaseConfiguration
  ? createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY)
  : null;

const configurationError = hasSupabaseConfiguration
  ? null
  : new Error(
      'No se encontraron las variables de entorno de Supabase. Configura VITE_SUPABASE_URL y VITE_SUPABASE_ANON_KEY en tu entorno de despliegue.'
    );

if (!hasSupabaseConfiguration && import.meta.env.DEV) {
  console.error(configurationError?.message);
}

export const isSupabaseConfigured = hasSupabaseConfiguration;
export const supabaseConfigError = configurationError;

export const getSupabaseClient = (): SupabaseClient<Database> => {
  if (!supabaseClient) {
    throw configurationError ?? new Error('Supabase client not available.');
  }
  return supabaseClient;
};
